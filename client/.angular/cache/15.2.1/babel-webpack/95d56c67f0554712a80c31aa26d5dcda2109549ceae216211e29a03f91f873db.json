{"ast":null,"code":"import { __decorate, __metadata } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FormBuilder, FormControl, Validators } from '@angular/forms';\n//import { Validaciones } from '../../../shared/validator/validator.service';\nimport { expedienteOrga, expedienteCnp } from '../../utilidades/validaciones';\nimport { OrgaService } from '../../servicios/orga.service';\nimport { switchMap, tap } from 'rxjs';\nvar NuevoOrgaComponent = /** @class */function () {\n  function NuevoOrgaComponent(elFormBuilder, orgaService) {\n    this.elFormBuilder = elFormBuilder;\n    this.orgaService = orgaService;\n    this.provincias = [{\n      value: 'acoruña',\n      viewValue: 'A Coruña'\n    }, {\n      value: 'alava',\n      viewValue: 'Álava'\n    }, {\n      value: 'albacete',\n      viewValue: 'Albacete'\n    }, {\n      value: 'alicante',\n      viewValue: 'Alicante'\n    }, {\n      value: 'almeria',\n      viewValue: 'Almería'\n    }, {\n      value: 'asturias',\n      viewValue: 'Asturias'\n    }, {\n      value: 'avila',\n      viewValue: 'Ávila'\n    }, {\n      value: 'badajoz',\n      viewValue: 'Badajoz'\n    }, {\n      value: 'baleares',\n      viewValue: 'Baleares'\n    }, {\n      value: 'barcelona',\n      viewValue: 'Barcelona'\n    }, {\n      value: 'burgos',\n      viewValue: 'Burgos'\n    }, {\n      value: 'caceres',\n      viewValue: 'Cáceres'\n    }, {\n      value: 'cadiz',\n      viewValue: 'Cádiz'\n    }, {\n      value: 'cantabria',\n      viewValue: 'Cantabria'\n    }, {\n      value: 'castellon',\n      viewValue: 'Castellón'\n    }, {\n      value: 'ciudadreal',\n      viewValue: 'Ciudad Real'\n    }, {\n      value: 'cordoba',\n      viewValue: 'Córdoba'\n    }, {\n      value: 'cuenca',\n      viewValue: 'Cuenca'\n    }, {\n      value: 'girona',\n      viewValue: 'Girona'\n    }, {\n      value: 'granada',\n      viewValue: 'Granada'\n    }, {\n      value: 'guadalajara',\n      viewValue: 'Guadalajara'\n    }, {\n      value: 'gipuzkoa',\n      viewValue: 'Gipuzkoa'\n    }, {\n      value: 'huelva',\n      viewValue: 'Huelva'\n    }, {\n      value: 'huesca',\n      viewValue: 'Huesca'\n    }, {\n      value: 'jaen',\n      viewValue: 'Jaén'\n    }, {\n      value: 'larioja',\n      viewValue: 'La Rioja'\n    }, {\n      value: 'laspalmas',\n      viewValue: 'Las Palmas'\n    }, {\n      value: 'leon',\n      viewValue: 'León'\n    }, {\n      value: 'lerida',\n      viewValue: 'Lérida'\n    }, {\n      value: 'lugo',\n      viewValue: 'Lugo'\n    }, {\n      value: 'madrid',\n      viewValue: 'Madrid'\n    }, {\n      value: 'malaga',\n      viewValue: 'Málaga'\n    }, {\n      value: 'murcia',\n      viewValue: 'Murcia'\n    }, {\n      value: 'navarra',\n      viewValue: 'Navarra'\n    }, {\n      value: 'ourense',\n      viewValue: 'Ourense'\n    }, {\n      value: 'palencia',\n      viewValue: 'Palencia'\n    }, {\n      value: 'pontevedra',\n      viewValue: 'Pontevedra'\n    }, {\n      value: 'salamanca',\n      viewValue: 'Salamanca'\n    }, {\n      value: 'segovia',\n      viewValue: 'Segovia'\n    }, {\n      value: 'sevilla',\n      viewValue: 'Sevilla'\n    }, {\n      value: 'soria',\n      viewValue: 'Soria'\n    }, {\n      value: 'tarragona',\n      viewValue: 'Tarragona'\n    }, {\n      value: 'santacruzdetenerife',\n      viewValue: 'Santa Cruz de Tenerife'\n    }, {\n      value: 'teruel',\n      viewValue: 'Teruel'\n    }, {\n      value: 'toledo',\n      viewValue: 'Toledo'\n    }, {\n      value: 'valladolid',\n      viewValue: 'Valladolid'\n    }, {\n      value: 'vizcaya',\n      viewValue: 'Vizcaya'\n    }, {\n      value: 'zamora',\n      viewValue: 'Zamora'\n    }, {\n      value: 'zaragoza',\n      viewValue: 'Zaragoza'\n    }];\n    this.estadoExpedientes = [{\n      value: 'abierto',\n      viewValue: 'Abierto'\n    }, {\n      value: 'pendiente',\n      viewValue: 'Pendiente'\n    }, {\n      value: 'resuelto',\n      viewValue: 'Resuelto'\n    }, {\n      value: 'finalizado',\n      viewValue: 'Finalizado'\n    }, {\n      value: 'otro',\n      viewValue: 'Otro'\n    }];\n    this.sinos = [{\n      value: 'si',\n      viewValue: 'Si'\n    }, {\n      value: 'no',\n      viewValue: 'No'\n    }];\n    /*   categorias1: ValorVista[] = [\r\n        { value: 'red', viewValue: 'Vehículo' },\r\n        { value: 'warn', viewValue: 'TIC' },\r\n        { value: 'animales', viewValue: 'Animales' },\r\n      ];\r\n    \r\n      categorias2: ValorVista[] = [\r\n        { value: '1', viewValue: 'Vehícussssssssssslo' },\r\n        { value: '2', viewValue: 'TIasdfasdfC' },\r\n        { value: 'animales', viewValue: 'Animaasdfadsfles' },\r\n      ]; */\n    /*   subcategoriasVV: ValorVista[] = [\r\n        { value: 'matricula', viewValue: 'Matrículaaaa' },\r\n        { value: 'numBas', viewValue: 'Número de Bastidor' },\r\n        { value: 'marca', viewValue: 'Marca' },\r\n        { value: 'modelo', viewValue: 'Modelo' },\r\n        { value: 'version', viewValue: 'Versión' },\r\n        { value: 'carburante', viewValue: 'Carburante' },\r\n        { value: 'color', viewValue: 'Color' }\r\n      ]; */\n    /*  subcategoriaOpcionales: ValorVista[] = [\r\n       { value: 'microchip', viewValue: 'Microchip' },\r\n       { value: 'numSerie', viewValue: 'Número de serie' }\r\n     ]; */\n    //nuevoFavorito: FormControl = this.elFormBuilder.control('',Validators.required);\n    /* miFormulario: FormGroup= new FormGroup({\r\n      nombre      : new FormControl('RTX 4080ti'),\r\n      precio      : new FormControl(1500),\r\n      existencias : new FormControl(5)\r\n    }) */\n    this.colorControl = new FormControl('');\n    //selectores\n    this.categorias = [];\n    this.subCategorias = [];\n    this.subClasificaciones = [];\n    this.listaSubCategorias = [];\n    this.listaSubClasificaciones = [];\n    this.cargando = false;\n    this.formularioOrga = this.elFormBuilder.group({\n      numExpOrga: [, [Validators.required, Validators.pattern(expedienteOrga)]],\n      juzgado: [, [Validators.required]],\n      //provincia: [ ,[Validators.required]],\n      procedimientoDiligencias: [, [Validators.required, Validators.min(1)]],\n      grupo: [, [Validators.required]],\n      estadoExpediente: [, [Validators.required]],\n      observaciones: [],\n      numExpCnp: [, [Validators.required, Validators.pattern(expedienteCnp)]],\n      categoria: ['', Validators.required],\n      subCategoria: ['', Validators.required],\n      subClasificacion: ['', Validators.required],\n      matriculaVehiculo: [, [Validators.required]],\n      numBastidorVehiculo: [, [Validators.required]],\n      marcaVehiculo: [, [Validators.required]],\n      modeloVehiculo: [, [Validators.required]],\n      versionVehiculo: [, [Validators.required]],\n      carburanteVehiculo: [, [Validators.required]],\n      colorVehiculo: [, [Validators.required]]\n    });\n  }\n  NuevoOrgaComponent.prototype.ngOnInit = function () {\n    var _this = this;\n    var _a, _b;\n    this.categorias = this.orgaService.categorias;\n    (_a = this.formularioOrga.get('categoria')) === null || _a === void 0 ? void 0 : _a.valueChanges.pipe(tap(function (_) {\n      var _a;\n      (_a = _this.formularioOrga.get('subCategoria')) === null || _a === void 0 ? void 0 : _a.reset('');\n      _this.subCategorias = [];\n      _this.listaSubCategorias = [];\n      _this.subClasificaciones = [];\n      _this.listaSubClasificaciones = [];\n      _this.cargando = true;\n    }),\n    //if(this.ca == (\"vehiculo\" || \"armas\")){}\n    switchMap(function (categoria) {\n      return _this.orgaService.getsubCategoriaPorCategoria(categoria);\n    })).subscribe(function (subCategorias) {\n      console.log(\"entra en subscribe de subclasi:\" + subCategorias);\n      _this.subCategorias.push(subCategorias);\n      _this.cargando = false;\n    });\n    console.log(\"11111111111subCategorias:\" + this.subCategorias);\n    console.log(\"22222222222222Categorias:\" + this.categorias);\n    (_b = this.formularioOrga.get('subCategoria')) === null || _b === void 0 ? void 0 : _b.valueChanges.pipe(tap(function () {\n      var _a;\n      _this.subClasificaciones = [];\n      (_a = _this.formularioOrga.get('subClasificacion')) === null || _a === void 0 ? void 0 : _a.reset('');\n      _this.cargando = true;\n    }), switchMap(function (subCategoria) {\n      return _this.orgaService.getsubClasificacionPorSubCategoria(subCategoria);\n    })).subscribe(function (subClasificaciones) {\n      //this.fronteras=pais?.borders || [];\n      //console.log(\"paises:\"+paises);\n      _this.subClasificaciones.push(subClasificaciones);\n      _this.cargando = false;\n    });\n  };\n  NuevoOrgaComponent.prototype.campoEsValido = function (campo) {\n    return this.formularioOrga.controls[campo].errors && this.formularioOrga.controls[campo].touched;\n  };\n  NuevoOrgaComponent.prototype.guardar = function () {};\n  var _a;\n  NuevoOrgaComponent = __decorate([Component({\n    selector: 'app-nuevo-orga',\n    templateUrl: './nuevo-orga.component.html',\n    styles: []\n  }), __metadata(\"design:paramtypes\", [FormBuilder, typeof (_a = typeof OrgaService !== \"undefined\" && OrgaService) === \"function\" ? _a : Object])], NuevoOrgaComponent);\n  return NuevoOrgaComponent;\n}();\nexport { NuevoOrgaComponent };\n/* import { Component, HostBinding, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { Game } from 'src/app/models/Game';\r\nimport { GamesService } from 'src/app/services/games.service';\r\n\r\n@Component({\r\n  selector: 'app-nuevo-orga',\r\n  templateUrl: './nuevo-orga.component.html',\r\n  styleUrls: ['./nuevo-orga.component.css']\r\n})\r\nexport class NuevoOrgaComponent implements OnInit {\r\n\r\n  @HostBinding('class') clases = 'row';\r\n\r\n  game: Game = {\r\n    id: 0,\r\n    title: '',\r\n    description: '',\r\n    image: '',\r\n    created_at: new Date()\r\n  };\r\n\r\n  edit: boolean = false;\r\n\r\n  constructor(private gameService: GamesService, private router: Router, private activatedRoute: ActivatedRoute) { }\r\n\r\n  ngOnInit() {\r\n    const params = this.activatedRoute.snapshot.params;\r\n    if (params.id) {\r\n      this.gameService.getGame(params.id)\r\n        .subscribe(\r\n          res => {\r\n            console.log(res);\r\n            this.game = res;\r\n            this.edit = true;\r\n          },\r\n          err => console.log(err)\r\n        )\r\n    }\r\n  }\r\n\r\n  saveNewGame() {\r\n    delete this.game.created_at;\r\n    delete this.game.id;\r\n    this.gameService.saveGame(this.game)\r\n      .subscribe(\r\n        res => {\r\n          console.log(res);\r\n          this.router.navigate(['/games']);\r\n        },\r\n        err => console.error(err)\r\n      )\r\n  }\r\n\r\n}\r\n */","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}